{"version":3,"file":"ParallaxEffect.min.js","sources":["../../../src/plugin/Plugin.js","../../../src/plugin/effects/ParallaxEffect.js"],"sourcesContent":["/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Flicking from \"@egjs/flicking\";\n\n// is to through pass Flicking's utils & constants to plugins\nconst utils = Flicking.utils;\nconst consts = utils.extend(utils.extend({}, Flicking.consts), {\n\tDIRECTION_NONE: Flicking.DIRECTION_NONE,\n\tDIRECTION_LEFT: Flicking.DIRECTION_LEFT,\n\tDIRECTION_RIGHT: Flicking.DIRECTION_RIGHT,\n\tDIRECTION_UP: Flicking.DIRECTION_UP,\n\tDIRECTION_DOWN: Flicking.DIRECTION_DOWN,\n\tDIRECTION_HORIZONTAL: Flicking.DIRECTION_HORIZONTAL,\n\tDIRECTION_VERTICAL: Flicking.DIRECTION_VERTICAL,\n\tDIRECTION_ALL: Flicking.DIRECTION_ALL\n});\n\n/**\n * Base class to generate flicking plugin\n * Lifecycle: componentWillMount --> componentMount --> componentDidMount --> componentWillUnmount\n * @ko Flicking 플러그인을 생성하기 위한 기본 클래스\n * @alias eg.Flicking.plugin\n * @private\n */\nexport default class Plugin {\n\t/**\n\t * Constructor\n\t * @param {Object} options Option object <ko>옵션 객체</ko>\n\t */\n\tconstructor(options = {}) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Before mounting. It's init point from Flicking instance\n\t * @param {Flicking} instance Flicking instance\n\t * @returns {Plugin}\n\t */\n\t$componentWillMount(instance) {\n\t\tthis.$$ = instance;\n\n\t\t// get hint and layer-hack setting\n\t\tthis.useWillChange = instance.$container.style.willChange === \"transform\";\n\t\tthis.useLayerHack = this.getInstanceConf().useLayerHack;\n\n\t\tthis.bindEvents();\n\t\tthis.$componentMount();\n\t\tthis.$componentDidMount();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * After mounting\n\t * @return {Plugin}\n\t */\n\t$componentDidMount() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Before the destroy\n\t */\n\t$componentWillUnmount() {\n\t\tObject.keys(this).forEach(v => {\n\t\t\tthis[v] = null;\n\t\t});\n\t}\n\n\tgetInstanceConf() {\n\t\treturn this.$$._conf;\n\t}\n\n\t/**\n\t * Bind flicking custom events\n\t */\n\tbindEvents() {\n\t\tthis.$$.on({\n\t\t\tflick: this._onFlick.bind(this),\n\t\t\tflickEnd: this._onFlickEnd.bind(this),\n\t\t\trestore: this._onRestore.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * 'flick' event handler\n\t * @param {Object} e\n\t * @private\n\t */\n\t_onFlick(e) {\n\t\tconst pos = e.pos;\n\t\tconst panel = this.$$._conf.panel;\n\t\tconst distance = e.distance != null ? e.distance : pos - panel.size * panel.index;\n\n\t\tthis.onFlick && this.onFlick(e, distance);\n\t}\n\n\t/**\n\t * 'flickEnd' event handler\n\t * @param {Object} e\n\t * @private\n\t */\n\t_onFlickEnd(e) {\n\t\tconst type = (e.direction & consts.DIRECTION_LEFT && \"next\") ||\n\t\t\t(e.direction & consts.DIRECTION_RIGHT && \"prev\") || \"\";\n\n\t\ttype && this.arrange && this.arrange(type);\n\t\tthis.onFlickEnd && this.onFlickEnd(e);\n\t}\n\n\t/**\n\t * 'restore' event handler\n\t * @param {Object} e\n\t * @private\n\t */\n\t_onRestore(e) {\n\t\tthis.onRestore && this.onRestore(e);\n\t}\n\n\t/**\n\t * Constant to expose Flicking's utility\n\t * @ko Flicking 유틸리티\n\t * @name utils\n\t * @memberof Plugin\n\t * @static\n\t * @constant\n\t * @type {Object}\n\t * @private\n\t */\n\tstatic utils = utils;\n\n\t/**\n\t * Constant to expose Flicking's constant value\n\t * @ko Flicking 상수 값\n\t * @name utils\n\t * @memberof Plugin\n\t * @static\n\t * @constant\n\t * @type {Object}\n\t * @private\n\t */\n\tstatic consts = consts;\n\n\t/**\n\t * Version info string\n\t * @ko 버전정보 문자열\n\t * @name VERSION\n\t * @memberof Plugin\n\t * @static\n\t * @type {String}\n\t * @example\n\t * eg.Flicking.plugin.OpacityEffect.VERSION;  // ex) 2.2.0\n\t */\n\tstatic VERSION = \"#__VERSION__#\";\n}\n","/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Plugin from \"../Plugin\";\n\n/**\n * A plugin to add horizontal parallax effect attached with flicking interaction.\n * - Should be targeted only one element per panel.\n * - It can't be used with `previewPadding` option.\n * @ko 플리킹 인터렉션에 따른 가로유형 패럴렉스 효과 플러그인.\n * - 각 패널당 한 개의 요소만 지정되어야 한다.\n * - `previewPadding` 옵션과 같이 사용될 수 없다.\n * @alias eg.Flicking.plugin.ParallaxEffect\n * @memberof eg.Flicking.plugin\n * @see eg.Flicking#plugin\n * @see eg.Flicking#plugins\n * @example\n * ```html\n * <div id=\"flick\">\n * \t<div><p style=\"background-image:url(a.png)\">panel 0</p></div>\n * \t<div><p style=\"background-image:url(b.png)\">panel 1</p></div>\n * \t<div><p style=\"background-image:url(c.png)\">panel 2</p></div>\n * </div>\n * ```\n * ```js\n * // as namespace usage\n * new eg.Flicking(\"#some\")\n *  .plugin([\n *      // Apply parallax effect to '<p>' selector matched elements\n *      new eg.Flicking.plugin.ParallaxEffect(\"p\")\n *  ]);\n *\n * // as ESM import usage\n * import Flicking from \"@egjs/flicking\";\n * import {ParallaxEffect} from \"@egjs/flicking-plugins\";\n *\n * new Flicking(\"#some\")\n *  .plugin([\n *      new ParallaxEffect(\"p\")\n *  ]);\n * ```\n */\nexport default class ParallaxEffect extends Plugin {\n\t/**\n\t * Constructor\n\t * @param {String} selector Target selector string within panel element<ko>패널 내에 위치한 대상 요소 셀렉터 문자열</ko>\n\t */\n\tconstructor(selector) {\n\t\tsuper({selector});\n\t}\n\n\t$componentMount() {\n\t\t// select target elements\n\t\tthis.imgs = this.$$.getAllElements().map(\n\t\t\tv => v.querySelector(this.options.selector)\n\t\t);\n\n\t\tthis.resize();\n\t\tthis._build();\n\n\t\treturn this;\n\t}\n\n\t_build() {\n\t\tconst utils = Plugin.utils;\n\t\tconst currIndex = this._getCurrIndex();\n\n\t\t// set panel element's style\n\t\tutils.css(this.getInstanceConf().panel.$list, {overflow: \"hidden\"});\n\n\t\t// set targeted element's style\n\t\tthis.imgs.forEach((v, i) => {\n\t\t\tlet x = -50;\n\n\t\t\tif (currIndex > i) {\n\t\t\t\tx = 50;\n\t\t\t} else if (currIndex === i) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tthis.useWillChange && utils.css(v, {willChange: \"transform\"});\n\t\t\tthis._setTranslate(v, `${x}%`, 0);\n\t\t});\n\t}\n\n\t_setTranslate(el, x, y) {\n\t\tel && Plugin.utils.css(el, {\n\t\t\ttransform:\n\t\t\t\tPlugin.utils.translate.apply(null,\n\t\t\t\t\tthis.$$._getDataByDirection([x, y]).concat(this.useLayerHack)\n\t\t\t\t)\n\t\t});\n\n\t\treturn el;\n\t}\n\n\n\t_getCurrIndex() {\n\t\treturn this.getInstanceConf().panel.currIndex;\n\t}\n\n\t_getPanel() {\n\t\tconst index = this._getCurrIndex();\n\n\t\treturn {\n\t\t\tprev: this.imgs[index - 1],\n\t\t\tcurr: this.imgs[index],\n\t\t\tnext: this.imgs[index + 1]\n\t\t};\n\t}\n\n\tarrange(type) {\n\t\tif (this.$$.options.circular && type !== \"resize\") {\n\t\t\tthis.imgs = (type === \"next\") ?\n\t\t\t\tthis.imgs.concat(this.imgs.shift()) :\n\t\t\t\t[this.imgs.pop()].concat(this.imgs);\n\t\t}\n\n\t\tconst panel = this._getPanel();\n\n\t\t// update panel's translate\n\t\tthis._setTranslate(panel.curr, 0, 0);\n\n\t\t/next|resize/.test(type) && this._setTranslate(panel.next, \"50%\", 0);\n\t\t/prev|resize/.test(type) && this._setTranslate(panel.prev, \"-50%\", 0);\n\t}\n\n\tonFlick(e, distance) {\n\t\tconst pos = e.pos;\n\t\tconst maxRange = this.size;\n\t\tconst delta = (pos % maxRange) / 2;\n\t\tconst siblingDelta = -(maxRange / 2 - delta);\n\n\t\tif (Math.abs(distance) >= maxRange) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst panel = this._getPanel();\n\t\tconst update = [];\n\n\t\tif (distance > 0 && panel.next) {\n\t\t\tupdate.push({el: panel.curr, x: delta});\n\t\t\tupdate.push({el: panel.next, x: siblingDelta});\n\t\t} else if (distance < 0 && panel.prev) {\n\t\t\tupdate.push({el: panel.curr, x: siblingDelta});\n\t\t\tupdate.push({el: panel.prev, x: delta});\n\t\t}\n\n\t\tupdate.forEach(v => this._setTranslate(v.el, `${v.x}px`, 0));\n\t}\n\n\tonRestore() {\n\t\tthis.arrange(\"resize\");\n\t}\n\n\tresize() {\n\t\tthis.size = this.getInstanceConf().panel.size;\n\t\tthis.onRestore(\"resize\");\n\t}\n\n\tget() {\n\t\treturn this.imgs[this._getCurrIndex()];\n\t}\n}\n"],"names":["utils","Flicking","consts","extend","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","Plugin","options","$componentWillMount","instance","$$","useWillChange","$container","style","willChange","useLayerHack","this","getInstanceConf","bindEvents","$componentMount","$componentDidMount","$componentWillUnmount","Object","keys","forEach","v","_this","_conf","on","flick","_onFlick","bind","flickEnd","_onFlickEnd","restore","_onRestore","e","pos","panel","distance","size","index","onFlick","type","direction","arrange","onFlickEnd","onRestore","VERSION","selector","_Plugin","imgs","getAllElements","map","querySelector","resize","_build","currIndex","_getCurrIndex","css","$list","overflow","i","x","_this2","_setTranslate","el","y","transform","translate","apply","_getDataByDirection","concat","_getPanel","prev","curr","next","circular","shift","pop","test","maxRange","delta","siblingDelta","Math","abs","update","push","_this3","get"],"mappings":"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"}