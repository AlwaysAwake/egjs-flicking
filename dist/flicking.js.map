{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d37ea90ab040c3f948e0","webpack:///./src/browser.js","webpack:///./src/consts.js","webpack:///./src/flicking.js","webpack:///./src/config.js","webpack:///./src/eventHandler.js","webpack:///./src/utils.js","webpack:///external {\"commonjs\":\"eg.component\",\"commonjs2\":\"eg.component\",\"amd\":\"eg.component\",\"root\":[\"eg\",\"Component\"]}","webpack:///external {\"commonjs\":\"eg.movablecoord\",\"commonjs2\":\"eg.movablecoord\",\"amd\":\"eg.movablecoord\",\"root\":[\"eg\",\"MovableCoord\"]}","webpack:///./src/index.js"],"names":["win","window","Math","self","Function","document","EVENTS","beforeFlickStart","beforeRestore","flick","flickEnd","restore","SUPPORT_TRANSFORM","style","documentElement","SUPPORT_WILLCHANGE","CSS","supports","IS_ANDROID2","test","navigator","userAgent","DATA_HEIGHT","consts","Flicking","element","options","_prefix","$wrapper","$","$children","children","length","Error","_setOptions","_setConfig","hasClickBug","_setPointerEvents","_build","_bindEvents","_applyPanelsCss","_arrangePanels","hwAccelerable","_setHint","adaptiveHeight","_setAdaptiveHeight","_adjustContainerCss","arrVal","previewPadding","bounce","extend","key","val","Number","isInteger","Array","isArray","padding","$nodes","classList","contains","prefix","$container","slice","call","conf","_conf","panel","$list","minCount","origPanelStyle","wrapper","className","getAttribute","list","map","v","useLayerHack","eventPrefix","horizontal","forEach","dirData","push","concat","panelCount","count","origCount","_setPadding","sizeValue","_getDataByDirection","size","cssValue","setAttribute","$parent","parentNode","createElement","appendChild","add","css","position","width","getUnitValue","height","boxSizing","top","left","_addClonePanels","_mcInst","min","max","margin","circular","easing","panelEffect","deceleration","_setDefaultPanel","defaultIndex","build","paddingSum","reverse","join","overflow","Object","keys","wrapperStyle","getComputedStyle","paddingType","getNumValue","cloneCount","cloneNodes","cloneNode","_movePanelPosition","append","listToMove","splice","index","lastIndex","coords","baseIndex","_getBasePositionIndex","_setPanelNo","no","currNo","currIndex","_setTranslate","_setMovableCoord","abs","sort","indexToMove","touch","customEvent","direction","_arrangePanelPosition","_applyPanelsPos","bind","_setMoveStyle","$el","coordsValue","moveStyle","$element","transform","translate","dummyAnchorClassName","$dummyAnchor","applyCss","i","phase","coordValue","paddingTop","container","value","parseInt","_getCoordsValue","x","y","focus","method","isDirVal","duration","coord","willChange","data","next","floor","mcInst","scale","interruptable","inputType","thresholdAngle","on","hold","_holdHandler","change","_changeHandler","release","_releaseHandler","animationStart","_animationStartHandler","animationEnd","_animationEndHandler","unbind","off","$panel","DIRECTION_LEFT","DIRECTION_RIGHT","$first","querySelector","outerHeight","_triggerBeforeRestore","e","replace","_triggerEvent","depaPos","destPos","stop","animating","_triggerRestore","restoreCall","_setPhaseValue","pos","changed","_isMovable","distance","undefined","_getNumByDirection","_revertPanelNo","num","obj","isObject","pointer","holding","hammerEvent","preventSystemEvent","pointerEvents","isMovable","threshold","currPos","get","name","param","trigger","assign","eventType","_getElement","physical","result","total","currentIndex","_setValueToMove","getIndex","getElement","getNextElement","getNextIndex","getAllElements","getPrevElement","getPrevIndex","getTotalCount","isPlaying","_movePanel","_movePanelByPhase","durationValue","prev","moveTo","noValue","isPositive","_checkPadding","split","resize","panelSize","maxCoords","querySelectorAll","removeAttribute","enableInput","disableInput","destroy","el","removeChild","with","CONFIG","holdPos","lastPos","OPTIONS","pow","posIndex","eventRes","movedPx","indexOf","round","superclass","utils","match","attr","nodeName","nodeType","target","objectN","source","shift","output","getAsNumber","defVal","isNaN","rx","String","getOuter","type","toLocaleLowerCase","outerWidth","isHWAccelerable","ua","version","useragent","isHA","MixinBuilder","mixins","reduce","c","m","Mixin","module","exports"],"mappings":"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","file":"flicking.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"eg.component\"), require(\"eg.movablecoord\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"eg.component\", \"eg.movablecoord\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Flicking\"] = factory(require(\"eg.component\"), require(\"eg.movablecoord\"));\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"Flicking\"] = factory(root[\"eg\"][\"Component\"], root[\"eg\"][\"MovableCoord\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d37ea90ab040c3f948e0","/* eslint-disable no-new-func, no-nested-ternary */\nconst win = typeof window !== \"undefined\" &&\n\twindow.Math === Math ?\n        window : typeof self !== \"undefined\" && self.Math === Math ?\n            self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nconst document = win.document;\n\nexport {\n    win as window,\n    document\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/browser.js","// doc, global import\nimport {window as global, document as doc} from \"./browser\";\n\n// define custom events name\nconst EVENTS = {\n\tbeforeFlickStart: \"beforeFlickStart\",\n\tbeforeRestore: \"beforeRestore\",\n\tflick: \"flick\",\n\tflickEnd: \"flickEnd\",\n\trestore: \"restore\"\n};\n\n// check for css transform support\nconst SUPPORT_TRANSFORM = (() => {\n\tconst style = doc.documentElement.style;\n\n\treturn \"transform\" in style || \"webkitTransform\" in style;\n})();\n\n// check for will-change support\nconst SUPPORT_WILLCHANGE = global.CSS && global.CSS.supports &&\n\tglobal.CSS.supports(\"will-change\", \"transform\");\n\n// check for Android 2.x\nconst IS_ANDROID2 = /Android 5\\./.test(navigator.userAgent);\n\n// data-height attribute's name for adaptiveHeight option\nconst DATA_HEIGHT = \"data-height\";\n\nexport {\n\tEVENTS,\n\tSUPPORT_TRANSFORM,\n\tSUPPORT_WILLCHANGE,\n\tIS_ANDROID2,\n\tDATA_HEIGHT\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/consts.js","import Component from \"@egjs/component\";\nimport MovableCoord from \"@egjs/movablecoord\";\nimport {utils, Mixin} from \"./utils\";\nimport * as consts from \"./consts\";\nimport {CONFIG, OPTIONS} from \"./config\";\nimport EventHandler from \"./eventHandler\";\n\nexport default class Flicking extends Mixin(Component).with(EventHandler) {\n\t/**\n\t * Constructor\n\t * @param {HTMLElement|String} element - base element or selector\n\t * @param {Object} options\n\t */\n\tconstructor(element, options, _prefix) {\n\t\tsuper();\n\n\t\tthis.$wrapper = utils.$(element);\n\t\tconst $children = this.$wrapper && this.$wrapper.children;\n\n\t\tif (!this.$wrapper || !$children || !$children.length) {\n\t\t\t// eslint-disable validateLineBreaks, maximumLineLength\n\t\t\tthrow new Error(\"Given base element doesn't exist or it hasn't proper DOM structure to be initialized.\");\n\n\t\t\t// eslint-enable validateLineBreaks, maximumLineLength\n\t\t}\n\n\t\tthis._setOptions(options);\n\t\tthis._setConfig($children, _prefix);\n\n\t\t!utils.hasClickBug() && (this._setPointerEvents = () => {});\n\n\t\tthis._build();\n\t\tthis._bindEvents(true);\n\n\t\tthis._applyPanelsCss();\n\t\tthis._arrangePanels();\n\n\t\tthis.options.hwAccelerable && consts.SUPPORT_WILLCHANGE && this._setHint();\n\t\tthis.options.adaptiveHeight && this._setAdaptiveHeight();\n\n\t\tthis._adjustContainerCss(\"end\");\n\t}\n\n\t/**\n\t * Set options values\n\t * @param {Object} options\n\t */\n\t_setOptions(options) {\n\t\t// default value of previewPadding and bounce\n\t\tconst arrVal = {\n\t\t\tpreviewPadding: [0, 0],\n\t\t\tbounce: [10, 10]\n\t\t};\n\n\t\tthis.options = utils.extend(OPTIONS, arrVal, options);\n\n\t\tfor (const key in arrVal) {\n\t\t\tlet val = this.options[key];\n\n\t\t\tif (Number.isInteger(val)) {\n\t\t\t\tval = [val, val];\n\t\t\t} else if (!Array.isArray(val)) {\n\t\t\t\tval = arrVal[key];\n\t\t\t}\n\n\t\t\tthis.options[key] = val;\n\t\t}\n\t}\n\n\t/**\n\t * Set config values\n\t * @param {HTMLCollection} $children wrappers' children elements\n\t * @param {String} _prefix event prefix\n\t * @return {HTMLElement}\n\t */\n\t_setConfig($children, _prefix) {\n\t\tconst options = this.options;\n\t\tconst padding = options.previewPadding;\n\t\tlet $nodes = $children;\n\n\t\tif ($nodes[0].classList.contains(`${options.prefix}-container`)) {\n\t\t\t$nodes = $nodes[0];\n\t\t\tthis.$container = $nodes;\n\t\t\t$nodes = $nodes.children;\n\t\t}\n\n\t\t// convert to array\n\t\t$nodes = [].slice.call($nodes);\n\n\t\t// config value\n\t\tconst conf = this._conf = utils.extend(CONFIG, {\n\t\t\tpanel: {\n\t\t\t\t$list: $nodes,\n\t\t\t\tminCount: padding[0] + padding[1] > 0 ? 5 : 3  // minimum panel count\n\t\t\t},\n\t\t\t// remember original class and inline style in case of restoration on destroy()\n\t\t\torigPanelStyle: {\n\t\t\t\twrapper: {\n\t\t\t\t\tclassName: this.$wrapper.getAttribute(\"class\") || null,\n\t\t\t\t\tstyle: this.$wrapper.getAttribute(\"style\") || null\n\t\t\t\t},\n\t\t\t\tlist: $nodes.map(v => ({\n\t\t\t\t\tclassName: v.getAttribute(\"class\") || null,\n\t\t\t\t\tstyle: v.getAttribute(\"style\") || null\n\t\t\t\t}))\n\t\t\t},\n\t\t\tuseLayerHack: options.hwAccelerable && !consts.SUPPORT_WILLCHANGE,\n\t\t\teventPrefix: _prefix || \"\"\n\t\t});\n\n\t\t[[\"LEFT\", \"RIGHT\"], [\"UP\", \"DOWN\"]][+!options.horizontal]\n\t\t\t.forEach(v => conf.dirData.push(MovableCoord[`DIRECTION_${v}`]));\n\t}\n\n\t/**\n\t * Build and set panel nodes to make flicking structure\n\t */\n\t_build() {\n\t\tconst panel = this._conf.panel;\n\t\tconst options = this.options;\n\t\tconst $children = panel.$list;\n\t\tconst padding = options.previewPadding.concat();\n\t\tconst prefix = options.prefix;\n\t\tconst horizontal = options.horizontal;\n\t\tlet panelCount = panel.count = panel.origCount = $children.length;\n\t\tconst bounce = options.bounce;\n\n\t\tthis._setPadding(padding, true);\n\t\tconst sizeValue = this._getDataByDirection([panel.size, \"100%\"]);\n\n\t\t// create container element\n\t\tconst cssValue = `position:relative;z-index:2000;width:100%;height:100%;${horizontal ? \"\" : \"top:0;\"}`;\n\n\t\tif (this.$container) {\n\t\t\tthis.$container.setAttribute(\"style\", cssValue);\n\t\t} else {\n\t\t\tconst $parent = $children[0].parentNode;\n\t\t\tconst $container = document.createElement(\"div\");\n\n\t\t\t$container.className = `${prefix}-container`;\n\t\t\t$container.setAttribute(\"style\", cssValue);\n\t\t\t$children.forEach(v => $container.appendChild(v));\n\n\t\t\t$parent.appendChild($container);\n\t\t\tthis.$container = $container;\n\t\t}\n\n\t\t// panels' css values\n\t\t$children.forEach(v => {\n\t\t\tv.classList.add(`${prefix}-panel`);\n\n\t\t\tutils.css(v, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\twidth: utils.getUnitValue(sizeValue[0]),\n\t\t\t\theight: utils.getUnitValue(sizeValue[1]),\n\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t});\n\t\t});\n\n\t\tif (this._addClonePanels()) {\n\t\t\tpanelCount = panel.count = (\n\t\t\t\tpanel.$list = [].slice.call(this.$container.children)\n\t\t\t).length;\n\t\t}\n\n\t\t// create MovableCoord instance\n\t\tthis._mcInst = new MovableCoord({\n\t\t\tmin: [0, 0],\n\t\t\tmax: this._getDataByDirection([panel.size * (panelCount - 1), 0]),\n\t\t\tmargin: 0,\n\t\t\tcircular: false,\n\t\t\teasing: options.panelEffect,\n\t\t\tdeceleration: options.deceleration,\n\t\t\tbounce: this._getDataByDirection([0, bounce[1], 0, bounce[0]])\n\t\t});\n\n\t\tthis._setDefaultPanel(options.defaultIndex);\n\t}\n\n\t/**\n\t * Set preview padding value\n\t * @param {Array} padding\n\t * @param {Boolean} build\n\t */\n\t_setPadding(padding, build) {\n\t\tconst horizontal = this.options.horizontal;\n\t\tconst panel = this._conf.panel;\n\t\tconst paddingSum = padding[0] + padding[1];\n\t\tconst cssValue = {};\n\n\t\tif (paddingSum || !build) {\n\t\t\tcssValue.padding = horizontal ?\n\t\t\t\t`0 ${padding.reverse().join(\"px 0 \")}px` :\n\t\t\t\t`${padding.join(\"px 0 \")}px`;\n\t\t}\n\n\t\tif (build) {\n\t\t\tcssValue.overflow = \"hidden\";\n\t\t\tcssValue.boxSizing = \"border-box\";\n\t\t}\n\n\t\tObject.keys(cssValue).length &&\n\t\t\tutils.css(this.$wrapper, cssValue);\n\n\t\tconst wrapperStyle = getComputedStyle(this.$wrapper);\n\t\tconst paddingType = horizontal ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"];\n\n\t\tpanel.size = utils.getNumValue(wrapperStyle[horizontal ? \"width\" : \"height\"]) - (\n\t\t\t\tutils.getNumValue(wrapperStyle[`padding${paddingType[0]}`]) +\n\t\t\t\tutils.getNumValue(wrapperStyle[`padding${paddingType[1]}`])\n\t\t\t);\n\t}\n\n\t/**\n\t * To fulfill minimum panel count cloning original node when circular or previewPadding option are set\n\t * @return {Boolean} true : added clone node, false : not added\n\t */\n\t_addClonePanels() {\n\t\tconst panel = this._conf.panel;\n\t\tconst panelCount = panel.origCount;\n\t\tconst cloneCount = panel.minCount - panelCount;\n\t\tconst list = panel.$list;\n\t\tlet cloneNodes;\n\n\t\t// if panels are given less than required when circular option is set, then clone node to apply circular mode\n\t\tif (this.options.circular && panelCount < panel.minCount) {\n\t\t\tcloneNodes = list.map(v => v.cloneNode(true));\n\n\t\t\twhile (cloneNodes.length < cloneCount) {\n\t\t\t\tcloneNodes = cloneNodes.concat(\n\t\t\t\t\tlist.map(v => v.cloneNode(true))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcloneNodes.forEach(v => this.$container.appendChild(v));\n\n\t\t\treturn !!cloneNodes.length;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Move panel's position within array\n\t * @param {Number} count element counts to move\n\t * @param {Boolean} append where the list to be appended(moved) (true: to the end, false: to the beginning)\n\t */\n\t_movePanelPosition(count, append) {\n\t\tconst panel = this._conf.panel;\n\t\tconst list = panel.$list;\n\t\tconst listToMove = list.splice(append ? 0 : panel.count - count, count);\n\n\t\tpanel.$list = append ?\n\t\t\tlist.concat(listToMove) :\n\t\t\tlistToMove.concat(list);\n\t}\n\n\t/**\n\t * Set default panel to show\n\t * @param {Number} index\n\t */\n\t_setDefaultPanel(index) {\n\t\tconst panel = this._conf.panel;\n\t\tconst lastIndex = panel.count - 1;\n\t\tlet coords;\n\t\tlet baseIndex;\n\n\t\tif (this.options.circular) {\n\t\t\t// if default index is given, then move correspond panel to the first position\n\t\t\tif (index > 0 && index <= lastIndex) {\n\t\t\t\tthis._movePanelPosition(index, true);\n\t\t\t}\n\n\t\t\t// set first panel's position according physical node length\n\t\t\tbaseIndex = this._getBasePositionIndex();\n\t\t\tthis._movePanelPosition(baseIndex, false);\n\n\t\t\tthis._setPanelNo({\n\t\t\t\tno: index,\n\t\t\t\tcurrNo: index\n\t\t\t});\n\t\t// if defaultIndex option is given, then move to that index panel\n\t\t} else if (index > 0 && index <= lastIndex) {\n\t\t\tthis._setPanelNo({\n\t\t\t\tindex,\n\t\t\t\tno: index,\n\t\t\t\tcurrIndex: index,\n\t\t\t\tcurrNo: index\n\t\t\t});\n\n\t\t\tcoords = [-(panel.size * index), 0];\n\n\t\t\tthis._setTranslate(coords);\n\t\t\tthis._setMovableCoord(\"setTo\", [\n\t\t\t\tMath.abs(coords[0]), Math.abs(coords[1])\n\t\t\t], true, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Arrange panels' position\n\t * @param {Boolean} sort Need to sort panel's position\n\t * @param {Number} indexToMove Number to move from current position (negative: left, positive: right)\n\t */\n\t_arrangePanels(sort, indexToMove) {\n\t\tconst conf = this._conf;\n\t\tconst panel = conf.panel;\n\t\tconst touch = conf.touch;\n\t\tconst dirData = conf.dirData;\n\t\tlet baseIndex;\n\n\t\tif (this.options.circular) {\n\t\t\t// when arranging panels, set flag to not trigger flick custom event\n\t\t\tconf.customEvent.flick = false;\n\n\t\t\t// move elements according direction\n\t\t\tif (sort) {\n\t\t\t\tindexToMove && (touch.direction = dirData[+!(indexToMove > 0)]);\n\t\t\t\tthis._arrangePanelPosition(touch.direction, indexToMove);\n\t\t\t}\n\n\t\t\t// set index for base element's position\n\t\t\tbaseIndex = this._getBasePositionIndex();\n\n\t\t\tthis._setPanelNo({\n\t\t\t\tindex: baseIndex,\n\t\t\t\tcurrIndex: baseIndex\n\t\t\t});\n\n\t\t\t// arrange MovableCoord's coord position\n\t\t\tconf.customEvent.flick = !!this._setMovableCoord(\"setTo\", [\n\t\t\t\tpanel.size * panel.index, 0\n\t\t\t], true, 0);\n\t\t}\n\n\t\tthis._applyPanelsPos();\n\t}\n\n\t/**\n\t * Set each panel's position in DOM\n\t */\n\t_applyPanelsPos() {\n\t\tthis._conf.panel.$list.forEach(this._applyPanelsCss.bind(this));\n\t}\n\n\t/**\n\t * Set CSS style values to move elements\n\t *\n\t * Initialize setting up checking if browser support transform css property.\n\t * If browser doesn't support transform, then use left/top properties instead.\n\t * @param {HTMLElement} $element\n\t * @param {Array} coords\n\t */\n\t_setMoveStyle($el, coordsValue) {\n\t\tthis._setMoveStyle = consts.SUPPORT_TRANSFORM ?\n\t\t\tfunction moveStyle($element, coords) {\n\t\t\t\tutils.css($element, {\n\t\t\t\t\ttransform: utils.translate(coords[0], coords[1], this._conf.useLayerHack)\n\t\t\t\t});\n\t\t\t} : ($element, coords) => {\n\t\t\t\tutils.css($element, {left: coords[0], top: coords[1]});\n\t\t\t};\n\n\t\tthis._setMoveStyle($el, coordsValue);\n\t}\n\n\t/**\n\t * Callback function for applying CSS values to each panels\n\t *\n\t * Need to be initialized before use, to set up for Android 2.x browsers or others.\n\t */\n\t_applyPanelsCss() {\n\t\tconst conf = this._conf;\n\t\tconst dummyAnchorClassName = \"__dummy_anchor\";\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tconf.$dummyAnchor = utils.$(`.${dummyAnchorClassName}`);\n\n\t\t\t!conf.$dummyAnchor.length &&\n\t\t\t\tthis.$wrapper.appendChild(\n\t\t\t\t\tconf.$dummyAnchor = utils.$(`<a href=\"javascript:void(0)\"\n\t\t\t\t\t\tclass=\"${dummyAnchorClassName}\"\n\t\t\t\t\t\tstyle=\"position:absolute;height:0px;width:0px\">`)\n\t\t\t\t);\n\n\t\t\tthis._applyPanelsCss = function applyCss(v, i) {\n\t\t\t\tconst coords = this._getDataByDirection([\n\t\t\t\t\t`${this._conf.panel.size * i}px`, 0\n\t\t\t\t]);\n\n\t\t\t\tutils.css(v, {\n\t\t\t\t\tleft: coords[0],\n\t\t\t\t\ttop: coords[1]\n\t\t\t\t});\n\t\t\t};\n\t\t} else {\n\t\t\tthis._applyPanelsCss = function applyCss(v, i) {\n\t\t\t\tconst coords = this._getDataByDirection([\n\t\t\t\t\tconsts.SUPPORT_TRANSFORM ?\n\t\t\t\t\t\t`${100 * i}%` :\n\t\t\t\t\t\t`${this._conf.panel.size * i}px`, 0\n\t\t\t\t]);\n\n\t\t\t\tthis._setMoveStyle(v, coords);\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Adjust container's css value to handle Android 2.x link highlighting bug\n\t *\n\t * @param {String} phase\n\t *    start - set left/top value to 0\n\t *    end - set translate value to 0\n\t * @param {Array} coordValue coordinate value\n\t */\n\t_adjustContainerCss(phase, coordValue) {\n\t\tconst conf = this._conf;\n\t\tconst panel = conf.panel;\n\t\tconst options = this.options;\n\t\tconst horizontal = options.horizontal;\n\t\tconst paddingTop = options.previewPadding[0];\n\t\tlet container = this.$container;\n\t\tlet coords = coordValue;\n\t\tlet value;\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tif (!coords) {\n\t\t\t\tcoords = [-panel.size * panel.index, 0];\n\t\t\t}\n\n\t\t\tif (phase === \"start\") {\n\t\t\t\tcontainer = container[0].style;\n\t\t\t\tvalue = parseInt(container[horizontal ? \"left\" : \"top\"], 10);\n\n\t\t\t\tif (horizontal) {\n\t\t\t\t\tvalue && (container.left = 0);\n\t\t\t\t} else {\n\t\t\t\t\tvalue !== paddingTop && (container.top = \"0px\");\n\t\t\t\t}\n\n\t\t\t\tthis._setTranslate([-coords[+!options.horizontal], 0]);\n\t\t\t} else if (phase === \"end\") {\n\t\t\t\tcoords = this._getCoordsValue(coords);\n\n\t\t\t\tutils.css(container, {\n\t\t\t\t\tleft: coords.x,\n\t\t\t\t\ttop: coords.y,\n\t\t\t\t\ttransform: utils.translate(0, 0, conf.useLayerHack)\n\t\t\t\t});\n\n\t\t\t\tconf.$dummyAnchor[0].focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set MovableCoord coord value\n\t * @param {String} method\n\t * @param {Array} coordValue\n\t * @param {Boolean} isDirVal\n\t * @param {Number} duration\n\t * @return {eg.MovableCoord} MovableCoord instance\n\t */\n\t_setMovableCoord(method, coordValue, isDirVal, duration) {\n\t\tlet coord = coordValue;\n\n\t\tif (isDirVal) {\n\t\t\tcoord = this._getDataByDirection(coord);\n\t\t}\n\n\t\treturn this._mcInst[method](coord[0], coord[1], duration);\n\t}\n\n\t/**\n\t * Set hint for browser to decide efficient way of doing transform changes(or animation)\n\t * https://dev.opera.com/articles/css-will-change-property/\n\t */\n\t_setHint() {\n\t\tconst style = {willChange: \"transform\"};\n\n\t\tutils.css(this.$container, style);\n\t\tutils.css(this._conf.panel.$list, style);\n\t}\n\n\t/**\n\t * Get data according options.horizontal value\n\t *\n\t * @param {Array} value primary data to handle\n\t * @return {Array}\n\t */\n\t_getDataByDirection(value) {\n\t\tconst data = value.concat();\n\n\t\t!this.options.horizontal && data.reverse();\n\t\treturn data;\n\t}\n\n\t/**\n\t * Move nodes\n\t * @param {Boolean} direction\n\t * @param {Number} indexToMove\n\t */\n\t_arrangePanelPosition(direction, indexToMove) {\n\t\tconst next = direction === this._conf.dirData[0];\n\n\t\tthis._movePanelPosition(Math.abs(indexToMove || 1), next);\n\t}\n\n\t/**\n\t * Get the base position index of the panel\n\t */\n\t_getBasePositionIndex() {\n\t\treturn Math.floor(this._conf.panel.count / 2 - 0.1);\n\t}\n\n\t/**\n\t * Bind events\n\t * @param {Boolean} bind\n\t */\n\t_bindEvents(bind) {\n\t\tconst options = this.options;\n\t\tconst $wrapper = this.$wrapper;\n\t\tconst mcInst = this._mcInst;\n\n\t\tif (bind) {\n\t\t\tmcInst.bind($wrapper, {\n\t\t\t\tscale: this._getDataByDirection([-1, 0]),\n\t\t\t\tdirection: MovableCoord[`DIRECTION_${options.horizontal ? \"HORIZONTAL\" : \"VERTICAL\"}`],\n\t\t\t\tinterruptable: false,\n\t\t\t\tinputType: options.inputType,\n\t\t\t\tthresholdAngle: options.thresholdAngle\n\t\t\t}).on({\n\t\t\t\thold: this._holdHandler.bind(this),\n\t\t\t\tchange: this._changeHandler.bind(this),\n\t\t\t\trelease: this._releaseHandler.bind(this),\n\t\t\t\tanimationStart: this._animationStartHandler.bind(this),\n\t\t\t\tanimationEnd: this._animationEndHandler.bind(this)\n\t\t\t});\n\t\t} else {\n\t\t\tmcInst.unbind($wrapper).off();\n\t\t}\n\t}\n\n\t/**\n\t * Set container's height value according to children's height\n\t * @param {Number} direction\n\t */\n\t_setAdaptiveHeight(direction) {\n\t\tconst conf = this._conf;\n\t\tconst indexToMove = conf.indexToMove;\n\t\tlet $children;\n\t\tlet height;\n\n\t\tconst $panel = indexToMove === 0 ?\n\n\t\t\t// panel moved by 1\n\t\t\tthis[`get${\n\t\t\t\t(direction === MovableCoord.DIRECTION_LEFT && \"Next\") ||\n\t\t\t\t(direction === MovableCoord.DIRECTION_RIGHT && \"Prev\") || \"\"\n\t\t\t}Element`]() :\n\n\t\t\t// panel moved by .moveTo()\n\t\t\tconf.panel.$list[\n\t\t\t\tconf.panel.currIndex + indexToMove\n\t\t\t];\n\n\t\tconst $first = $panel.querySelector(\":first-child\");\n\n\t\theight = $first.getAttribute(consts.DATA_HEIGHT);\n\n\t\tif (!height) {\n\t\t\t$children = $panel.children;\n\t\t\theight = utils.outerHeight(\n\t\t\t\t$children.length > 1 ? ($panel.style.height = \"auto\", $panel) : $first\n\t\t\t);\n\n\t\t\t$first.setAttribute(consts.DATA_HEIGHT, height);\n\t\t}\n\n\t\tthis.$wrapper.style.height = `${height}px`;\n\t}\n\n\t/**\n\t * Trigger beforeRestore event\n\t * @param {Object} e event object\n\t */\n\t_triggerBeforeRestore(e) {\n\t\tconst conf = this._conf;\n\t\tconst touch = conf.touch;\n\n\t\t// reverse direction value when restore\n\t\ttouch.direction = ~~conf.dirData.join(\"\").replace(touch.direction, \"\");\n\n\t\t/**\n\t\t * This event is fired before an element is restored to its original position when user action is done while the element is not dragged until a certain distance threshold is reached\n\t\t * @ko 다음 패널로 바뀌는 기준 이동 거리만큼 이동하기 전에 사용자의 동작이 끝났을 때 원래 패널로 복원되기 전에 발생하는 이벤트\n\t\t * @name eg.Flicking#beforeRestore\n\t\t * @event\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {String} param.eventType The name of the event <ko>이름명</ko>\n\t\t * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM. (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다. (@deprecated since 1.3.0)</ko>\n\t\t * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content.<ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n\t\t * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n\t\t * @param {Array} param.depaPos Start coordinate <ko>출발점 좌표</ko>\n\t\t * @param {Number} param.depaPos.0 x-coordinate <ko>x 좌표</ko>\n\t\t * @param {Number} param.depaPos.1 y-coordinate <ko>y 좌표</ko>\n\t\t * @param {Array} param.destPos End coordinate <ko>도착점 좌표</ko>\n\t\t * @param {Number} param.destPos.0 x-coordinate <ko>x 좌표</ko>\n\t\t * @param {Number} param.destPos.1 y-coordinate <ko>y 좌표</ko>\n\t\t */\n\t\tconf.customEvent.restore = this._triggerEvent(consts.EVENTS.beforeRestore, {\n\t\t\tdepaPos: e.depaPos,\n\t\t\tdestPos: e.destPos\n\t\t});\n\n\t\tif (!conf.customEvent.restore) {\n\t\t\t\"stop\" in e && e.stop();\n\t\t\tconf.panel.animating = false;\n\t\t}\n\t}\n\n\t/**\n\t * Trigger restore event\n\t */\n\t_triggerRestore() {\n\t\tconst customEvent = this._conf.customEvent;\n\n\t\t/**\n\t\t * This event is fired after an element is restored to its original position when user action is done while the element is not dragged until a certain distance threshold is reached.\n\t\t * @ko 다음 패널로 바뀌는 기준 이동 거리만큼 이동하기 전에 사용자의 동작이 끝났을 때 원래 패널로 복원된 다음 발생하는 이벤트\n\t\t * @name eg.Flicking#restore\n\t\t * @event\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {String} param.eventType The name of the event <ko>이름명</ko>\n\t\t * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM(@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n\t\t * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content. <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n\t\t * @param {Number} param.direction Direction of the panel move (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n\t\t */\n\t\tcustomEvent.restore && this._triggerEvent(consts.EVENTS.restore);\n\t\tcustomEvent.restoreCall = false;\n\t}\n\n\t/**\n\t * Set value when panel changes\n\t * @param {String} phase - [start|end]\n\t * @param {Object} pos\n\t */\n\t_setPhaseValue(phase, pos) {\n\t\tconst conf = this._conf;\n\t\tconst options = this.options;\n\t\tconst panel = conf.panel;\n\n\t\tif (phase === \"start\" && (panel.changed = this._isMovable())) {\n\t\t\t/**\n\t\t\t * This event is fired before flicking starts\n\t\t\t * @ko 플리킹이 시작하기 전에 발생하는 이벤트\n\t\t\t * @name eg.Flicking#beforeFlickStart\n\t\t\t * @event\n\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t * @param {String} param.eventType The name of the event <ko>이름명</ko>\n\t\t\t * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM. (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n\t\t\t * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content.<ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n\t\t\t * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>−\t이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n\t\t\t * @param {Array} param.depaPos Start coordinate <ko>출발점 좌표</ko>\n\t\t\t * @param {Number} param.depaPos.0 x-coordinate <ko>x 좌표</ko>\n\t\t\t * @param {Number} param.depaPos.1 y-coordinate <ko>y 좌표</ko>\n\t\t\t * @param {Array} param.destPos End coordinate <ko>도착점 좌표</ko>\n\t\t\t * @param {Number} param.destPos.0 x-coordinate <ko>x 좌표</ko>\n\t\t\t * @param {Number} param.destPos.1 y-coordinate <ko>y 좌표</ko>\n\t\t\t */\n\t\t\tif (!this._triggerEvent(consts.EVENTS.beforeFlickStart, pos)) {\n\t\t\t\tpanel.changed = panel.animating = false;\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\toptions.adaptiveHeight && this._setAdaptiveHeight(conf.touch.direction);\n\t\t\t}\n\n\t\t\tconf.indexToMove === 0 && this._setPanelNo();\n\t\t} else if (phase === \"end\") {\n\t\t\tif (options.circular && panel.changed) {\n\t\t\t\tthis._arrangePanels(true, conf.indexToMove);\n\t\t\t}\n\n\t\t\t!consts.IS_ANDROID2 && this._setTranslate([-panel.size * panel.index, 0]);\n\t\t\tconf.touch.distance = conf.indexToMove = 0;\n\n\t\t\t/**\n\t\t\t * This event is fired after panel moves.\n\t\t\t * @ko 패널이 이동한 다음 발생하는 이벤트\n\t\t\t * @name eg.Flicking#flickEnd\n\t\t\t * @event\n\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t * @param {String} param.eventType The name of the event <ko>이름명</ko>\n\t\t\t * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n\t\t\t * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content. <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n\t\t\t * @param {Number} param.direction Direction of the movemen (see eg.MovableCoord.DIRECTION_* constant) <ko>−\t이동 방향(eg.MovableCoord.DIRECTION_* constant 참고</ko>\n\t\t\t */\n\t\t\tpanel.changed && this._triggerEvent(consts.EVENTS.flickEnd);\n\t\t}\n\n\t\t!(phase === \"start\" && pos === undefined) && this._adjustContainerCss(phase);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get positive or negative according direction\n\t */\n\t_getNumByDirection() {\n\t\tconst conf = this._conf;\n\n\t\treturn conf.touch.direction === conf.dirData[0] ? 1 : -1;\n\t}\n\n\t/**\n\t * Revert panel number\n\t */\n\t_revertPanelNo() {\n\t\tconst panel = this._conf.panel;\n\t\tconst num = this._getNumByDirection();\n\n\t\tconst index = panel.currIndex >= 0 ? panel.currIndex : panel.index - num;\n\t\tconst no = panel.currNo >= 0 ? panel.currNo : panel.no - num;\n\n\t\tthis._setPanelNo({\n\t\t\tindex,\n\t\t\tno\n\t\t});\n\t}\n\n\t/**\n\t * Set the panel number\n\t * @param {Object} obj number object\n\t */\n\t_setPanelNo(obj) {\n\t\tconst panel = this._conf.panel;\n\t\tconst count = panel.origCount - 1;\n\t\tconst num = this._getNumByDirection();\n\n\t\tif (utils.isObject(obj)) {\n\t\t\tfor (const key in obj) {\n\t\t\t\tpanel[key] = obj[key];\n\t\t\t}\n\t\t} else {\n\t\t\t// remember current value\n\t\t\tpanel.currIndex = panel.index;\n\t\t\tpanel.currNo = panel.no;\n\n\t\t\tpanel.index += num;\n\t\t\tpanel.no += num;\n\t\t}\n\n\t\tif (panel.no > count) {\n\t\t\tpanel.no = 0;\n\t\t} else if (panel.no < 0) {\n\t\t\tpanel.no = count;\n\t\t}\n\t}\n\n\t/**\n\t * Set pointerEvents css property on container element due to the iOS click bug\n\t * @param {Event} e\n\t */\n\t_setPointerEvents(e) {\n\t\tconst pointer = utils.css(this.$container, \"pointerEvents\");\n\t\tlet val;\n\n\t\tif (e && e.holding &&\n\t\t\te.hammerEvent && e.hammerEvent.preventSystemEvent &&\n\t\t\tpointer !== \"none\"\n\t\t) {\n\t\t\tval = \"none\";\n\t\t} else if (!e && pointer !== \"auto\") {\n\t\t\tval = \"auto\";\n\t\t}\n\n\t\tval && utils.css(this.$container, {pointerEvents: val});\n\t}\n\n\t/**\n\t * Get coordinate value with unit\n\t * @param coords {Array} x,y numeric value\n\t * @return {Object} x,y coordinate value with unit\n\t */\n\t_getCoordsValue(coordsValue) {\n\t\t// the param comes as [ val, 0 ], whatever the direction. So reorder the value depend the direction.\n\t\tconst coords = this._getDataByDirection(coordsValue);\n\n\t\treturn {\n\t\t\tx: utils.getUnitValue(coords[0]),\n\t\t\ty: utils.getUnitValue(coords[1])\n\t\t};\n\t}\n\n\t/**\n\t * Set translate property value\n\t * @param {Array} coords coordinate x,y value\n\t */\n\t_setTranslate(coordsValue) {\n\t\tconst coords = this._getCoordsValue(coordsValue);\n\n\t\tthis._setMoveStyle(this.$container, [coords.x, coords.y]);\n\t}\n\n\t/**\n\t * Check if panel passed through threshold pixel\n\t */\n\t_isMovable() {\n\t\tconst options = this.options;\n\t\tconst mcInst = this._mcInst;\n\t\tconst isMovable = Math.abs(this._conf.touch.distance) >= options.threshold;\n\t\tlet max;\n\t\tlet currPos;\n\n\t\tif (!options.circular && isMovable) {\n\t\t\tmax = this._getDataByDirection(mcInst.options.max)[0];\n\t\t\tcurrPos = this._getDataByDirection(mcInst.get())[0];\n\n\t\t\t// if current position out of range\n\t\t\tif (currPos < 0 || currPos > max) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn isMovable;\n\t}\n\n\t/**\n\t * Trigger custom events\n\t * @param {String} name - event name\n\t * @param {Object} param - additional event value\n\t * @return {Boolean}\n\t */\n\t_triggerEvent(name, param) {\n\t\tconst conf = this._conf;\n\t\tconst panel = conf.panel;\n\n\t\t// pass changed panel no only on 'flickEnd' event\n\t\tif (name === consts.EVENTS.flickEnd) {\n\t\t\tpanel.currNo = panel.no;\n\t\t\tpanel.currIndex = panel.index;\n\t\t}\n\n\t\treturn this.trigger(conf.eventPrefix + name, Object.assign({\n\t\t\teventType: name,\n\t\t\tindex: panel.currIndex,\n\t\t\tno: panel.currNo,\n\t\t\tdirection: conf.touch.direction\n\t\t}, param));\n\t}\n\n\t/**\n\t * Get next/prev panel element/index.\n\t * @param {Boolean} direction\n\t * @param {Boolean} element - true:to get element, false:to get index\n\t * @param {Number} physical - true : physical, false : logical\n\t * @return {HTMLElement|Number}\n\t */\n\t_getElement(direction, element, physical) {\n\t\tconst panel = this._conf.panel;\n\t\tconst circular = this.options.circular;\n\t\tconst pos = panel.currIndex;\n\t\tconst next = direction === this._conf.dirData[0];\n\t\tlet result = null;\n\t\tlet total;\n\t\tlet index;\n\n\t\tif (physical) {\n\t\t\ttotal = panel.count;\n\t\t\tindex = pos;\n\t\t} else {\n\t\t\ttotal = panel.origCount;\n\t\t\tindex = panel.currNo;\n\t\t}\n\n\t\tconst currentIndex = index;\n\n\t\tif (next) {\n\t\t\tif (index < total - 1) {\n\t\t\t\tindex++;\n\t\t\t} else if (circular) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif (index > 0) {\n\t\t\t\tindex--;\n\t\t\t} else if (circular) {\n\t\t\t\tindex = total - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (currentIndex !== index) {\n\t\t\tresult = element ? panel.$list[next ? pos + 1 : pos - 1] : index;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Set value to force move panels when duration is 0\n\t * @param {Boolean} next\n\t */\n\t_setValueToMove(next) {\n\t\tconst conf = this._conf;\n\n\t\tconf.touch.distance = this.options.threshold + 1;\n\t\tconf.touch.direction = conf.dirData[+!next];\n\t}\n\n\t/**\n\t * Returns the index number of the current panel element.\n\t * @ko 현재 패널 엘리먼트의 인덱스 번호를 반환한다\n\t * @method eg.Flicking#getIndex\n\t * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n\t * @return {Number} Index number of the current panel element <ko>현재 패널의 인덱스 번호</ko>\n\t */\n\tgetIndex(physical) {\n\t\treturn this._conf.panel[physical ? \"currIndex\" : \"currNo\"];\n\t}\n\n\t/**\n\t * Returns the reference of the current panel element.\n\t * @ko 현재 패널 엘리먼트의 레퍼런스를 반환한다\n\t * @method eg.Flicking#getElement\n\t * @return {HTMLElement} Current element <ko>현재 엘리먼트</ko>\n\t */\n\tgetElement() {\n\t\tconst panel = this._conf.panel;\n\n\t\treturn panel.$list[panel.currIndex];\n\t}\n\n\t/**\n\t * Returns the reference of the next panel element.\n\t * @ko 다음 패널 엘리먼트의 레퍼런스를 반환한다.\n\t * @method eg.Flicking#getNextElement\n\t * @return {HTMLElement|null} Next panel element or null if it does not exist.<ko>다음 패널 엘리먼트. 패널이 없으면 'null'을 반환한다.</ko>\n\t */\n\tgetNextElement() {\n\t\treturn this._getElement(this._conf.dirData[0], true);\n\t}\n\n\t/**\n\t * Returns the index number of the next panel element.\n\t * @ko 다음 패널 엘리먼트의 인덱스 번호를 반환한다\n\t * @method eg.Flicking#getNextIndex\n\t * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n\t * @return {Number|null} Index number of the next panel element or null if it does not exist. <ko>다음 패널 엘리먼트의 인덱스 번호. 패널이 없으면 'null'을 반환한다</ko>\n\t */\n\tgetNextIndex(physical) {\n\t\treturn this._getElement(this._conf.dirData[0], false, physical);\n\t}\n\n\t/**\n\t * Returns the references of whole panel elements.\n\t * @ko 패널을 구성하는 모든 엘리먼트의 레퍼런스를 반환한다\n\t * @method eg.Flicking#getAllElements\n\t * @return {HTMLElement} Whole panel elements <ko>모든 패널 엘리먼트</ko>\n\t */\n\tgetAllElements() {\n\t\treturn this._conf.panel.$list;\n\t}\n\n\t/**\n\t * Returns the reference of the previous panel element.\n\t * @ko 이전 패널 엘리먼트의 레퍼런스를 반환한다.\n\t * @method eg.Flicking#getPrevElement\n\t * @return {HTMLElement|null} Previous panel element or null if it does not exist. <ko>이전 패널 엘리먼트. 패널이 없으면 'null'을 반환한다</ko>\n\t */\n\tgetPrevElement() {\n\t\treturn this._getElement(this._conf.dirData[1], true);\n\t}\n\n\t/**\n\t * Returns the index number of the previous panel element.\n\t * @ko 이전 패널 엘리먼트의 인덱스 번호를 반환한다\n\t * @method eg.Flicking#getPrevIndex\n\t * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n\t * @return {Number|null} Previous element index value or null if no more element exist<ko>이전 패널 인덱스 번호. 패널이 없는 경우에는 null</ko>\n\t */\n\tgetPrevIndex(physical) {\n\t\treturn this._getElement(this._conf.dirData[1], false, physical);\n\t}\n\n\t/**\n\t * Returns the total number of whole panel elements.\n\t * @ko 전체 패널 엘리먼트의 개수를 반환한다\n\t * @method eg.Flicking#getTotalCount\n\t * @deprecated since 1.3.0\n\t * @param {Boolean} [physical=false] Number of elements relative to (true: DOM, false: panel content)<ko>엘리먼트 개수의 기준(true: DOM 엘리먼트 기준, false: 패널 콘텐츠 기준)</ko>\n\t * @return {Number} Total number of whole panel elements <ko>모든 패널 엘리먼트의 개수</ko>\n\t */\n\tgetTotalCount(physical) {\n\t\treturn this._conf.panel[physical ? \"count\" : \"origCount\"];\n\t}\n\n\t/**\n\t * Checks whether the animated panel is playing.\n\t * @ko 패널 이동 애니메이션이 진행 중인지 확인한다.\n\t * @method eg.Flicking#isPlaying\n\t * @return {Boolean} Indicates whether the animated panel is playing <ko>패널 이동 애니메이션 진행 중 여부</ko>\n\t */\n\tisPlaying() {\n\t\treturn this._conf.panel.animating;\n\t}\n\n\t/**\n\t * Move panel to the given direction\n\t * @param {Boolean} next\n\t * @param {Number} duration\n\t */\n\t_movePanel(next, duration) {\n\t\tconst conf = this._conf;\n\t\tconst panel = conf.panel;\n\t\tconst options = this.options;\n\n\t\tif (panel.animating || conf.touch.holding) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._setValueToMove(next);\n\n\t\tif (options.circular ||\n\t\t\tthis[next ? \"getNextIndex\" : \"getPrevIndex\"]() != null\n\t\t) {\n\t\t\tthis._movePanelByPhase(\"setBy\", [\n\t\t\t\tpanel.size * (next ? 1 : -1), 0\n\t\t\t], duration);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Move panel applying start/end phase value\n\t * @param {String} method movableCoord method name\n\t * @param {Object} coords coordinate array value\n\t * @param {Number} durationValue duration value\n\t */\n\t_movePanelByPhase(method, coords, durationValue) {\n\t\tconst duration = utils.getNumValue(durationValue, this.options.duration);\n\n\t\tif (this._setPhaseValue(\"start\") !== false) {\n\t\t\tthis._setMovableCoord(method, coords, true, duration);\n\t\t\t!duration && this._setPhaseValue(\"end\");\n\t\t}\n\t}\n\n\t/**\n\t * Moves an element to the next panel.\n\t * @ko 다음 패널로 이동한다.\n\t * @method eg.Flicking#next\n\t * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n\t * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n\t */\n\tnext(duration) {\n\t\treturn this._movePanel(true, duration);\n\t}\n\n\t/**\n\t * Moves an element to the previous panel.\n\t * @ko 이전 패널로 이동한다.\n\t * @method eg.Flicking#prev\n\t * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n\t * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tprev(duration) {\n\t\treturn this._movePanel(false, duration);\n\t}\n\n\t/**\n\t * Moves an element to the indicated panel.\n\t * @ko 지정한 패널로 이동한다.\n\t * @method eg.Flicking#moveTo\n\t * @param {Number} no Logical index number of the target panel element, which is relative to the panel content. <ko>이동할 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n\t * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n\t * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tmoveTo(noValue, duration) {\n\t\tconst conf = this._conf;\n\t\tconst panel = conf.panel;\n\t\tconst circular = this.options.circular;\n\t\tconst currentIndex = panel.index;\n\t\tlet indexToMove;\n\t\tlet isPositive;\n\t\tlet no = noValue;\n\n\t\tno = utils.getNumValue(no, -1);\n\n\t\tif (no < 0 || no >= panel.origCount || no === panel.no ||\n\t\t\tpanel.animating || conf.touch.holding) {\n\t\t\treturn this;\n\t\t}\n\n\t\tindexToMove = no - (circular ? panel.no : currentIndex);\n\t\tisPositive = indexToMove > 0;\n\n\t\t// check for real panel count which can be moved on each sides in circular mode\n\t\tif (circular &&\n\t\t\tMath.abs(indexToMove) >\n\t\t\t(isPositive ? panel.count - (currentIndex + 1) : currentIndex)) {\n\t\t\tindexToMove += (isPositive ? -1 : 1) * panel.count;\n\t\t\tisPositive = indexToMove > 0;\n\t\t}\n\n\t\tthis._setPanelNo(circular ? {no} : {no, index: no});\n\t\tthis._conf.indexToMove = indexToMove;\n\t\tthis._setValueToMove(isPositive);\n\n\t\tthis._movePanelByPhase(\n\t\t\tcircular ? \"setBy\" : \"setTo\",\n\t\t\t[panel.size * (circular ? indexToMove : no), 0],\n\t\t\tduration\n\t\t);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Update panel's previewPadding size according options.previewPadding\n\t */\n\t_checkPadding() {\n\t\tconst options = this.options;\n\t\tconst previewPadding = options.previewPadding.concat();\n\t\tlet padding = utils.css(this.$wrapper, \"padding\").split(\" \");\n\n\t\toptions.horizontal && padding.reverse();\n\n\t\t// get current padding value\n\t\tpadding = [padding[0]]\n\t\t\t.push(padding[padding.length === 2 ? 0 : 2])\n\t\t\t.map(v => parseInt(v, 10));\n\n\t\t// update padding when current and given are different\n\t\tif ((previewPadding.length === 2 && previewPadding[0] !== padding[0]) ||\n\t\t\tpreviewPadding[1] !== padding[1]) {\n\t\t\tthis._setPadding(previewPadding);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the size of the panel.\n\t * @ko 패널의 크기를 갱신한다\n\t * @method eg.Flicking#resize\n\t * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t let some = new eg.Flicking(\"#mflick\", {\n\t\t\t\t\tpreviewPadding: [10,10]\n\t\t\t\t});\n\n\t // when device orientaion changes\n\t some.resize();\n\n\t // or when changes previewPadding option from its original value\n\t some.options.previewPadding = [20, 30];\n\t some.resize();\n\t */\n\tresize() {\n\t\tconst conf = this._conf;\n\t\tconst options = this.options;\n\t\tconst panel = conf.panel;\n\t\tconst horizontal = options.horizontal;\n\t\tlet panelSize;\n\n\t\tif (~~options.previewPadding.join(\"\")) {\n\t\t\tthis._checkPadding();\n\t\t\tpanelSize = panel.size;\n\t\t} else if (horizontal) {\n\t\t\tpanelSize = panel.size = utils.css(this.$wrapper, \"width\", true);\n\t\t}\n\n\t\tconst maxCoords = this._getDataByDirection(\n\t\t\t[panelSize * (panel.count - 1), 0]\n\t\t);\n\n\t\t// resize elements\n\t\thorizontal && utils.css(this.$container, {width: `${maxCoords[0] + panelSize}px`});\n\t\tutils.css(panel.$list, {\n\t\t\t[horizontal ? \"width\" : \"height\"]: utils.getUnitValue(panelSize)\n\t\t});\n\n\t\t// remove data-height attribute and re-evaluate panel's height\n\t\tif (options.adaptiveHeight) {\n\t\t\tconst $panel = this.$container.querySelectorAll(`[${consts.DATA_HEIGHT}]`);\n\n\t\t\tif ($panel.length) {\n\t\t\t\t$panel.forEach(v => v.removeAttribute(consts.DATA_HEIGHT));\n\t\t\t\tthis._setAdaptiveHeight();\n\t\t\t}\n\t\t}\n\n\t\tthis._mcInst.options.max = maxCoords;\n\t\tthis._setMovableCoord(\"setTo\", [panelSize * panel.index, 0], true, 0);\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tthis._applyPanelsPos();\n\t\t\tthis._adjustContainerCss(\"end\");\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Restores an element to its original position when it movement stops while the element is not dragged until a certain distance threshold is reached.\n\t * @ko 다음 패널로 바뀌기 전에 패널 이동이 멈췄을 때 원래 패널로 복원한다\n\t * @method eg.Flicking#restore\n\t * @param {Number} [durationValue=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n\t * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * let some = new eg.Flicking(\"#mflick\").on({\n\t *\t\t\t\tbeforeFlickStart : function(e) {\n\t *\t\t\t\t\tif(e.no === 2) {\n\t *\t\t\t\t\t\te.stop();  // stop flicking\n\t *\t\t\t\t\t\tthis.restore(100);  // restoring to previous position\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t);\n\t */\n\trestore(durationValue) {\n\t\tconst conf = this._conf;\n\t\tconst panel = conf.panel;\n\t\tconst currPos = this._getDataByDirection(this._mcInst.get());\n\t\tlet duration = durationValue;\n\t\tlet destPos;\n\n\t\t// check if the panel isn't in right position\n\t\tif (currPos[0] !== panel.currIndex * panel.size) {\n\t\t\tconf.customEvent.restoreCall = true;\n\t\t\tduration = utils.getNumValue(duration, this.options.duration);\n\n\t\t\tthis._revertPanelNo();\n\t\t\tdestPos = this._getDataByDirection([panel.size * panel.index, 0]);\n\n\t\t\tthis._triggerBeforeRestore({depaPos: currPos, destPos});\n\t\t\tthis._setMovableCoord(\"setTo\", destPos, true, duration);\n\n\t\t\tif (!duration) {\n\t\t\t\tthis._adjustContainerCss(\"end\");\n\t\t\t\tthis._triggerRestore();\n\t\t\t}\n\n\t\t\t// to handle on api call\n\t\t} else if (panel.changed) {\n\t\t\tthis._revertPanelNo();\n\t\t\tconf.touch.distance = conf.indexToMove = 0;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables input devices.\n\t * @ko 입력 장치를 사용할 수 있게 한다\n\t * @method eg.Flicking#enableInput\n\t * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n\t */\n\tenableInput() {\n\t\tthis._mcInst.enableInput();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disables input devices.\n\t * @ko 입력 장치를 사용할 수 없게 한다.\n\t * @method eg.Flicking#disableInput\n\t * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n\t */\n\tdisableInput() {\n\t\tthis._mcInst.disableInput();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Destroys elements, properties, and events used in a panel.\n\t * @ko 패널에 사용한 엘리먼트와 속성, 이벤트를 해제한다\n\t * @method eg.Flicking#destroy\n\t */\n\tdestroy() {\n\t\tconst conf = this._conf;\n\t\tconst origPanelStyle = conf.origPanelStyle;\n\t\tconst wrapper = origPanelStyle.wrapper;\n\t\tconst list = origPanelStyle.list;\n\n\t\t// unwrap container element and restore original inline style\n\t\tthis.$wrapper.setAttribute(\"class\", wrapper.className);\n\t\tthis.$wrapper.setAttribute(\"style\", wrapper.style);\n\n\t\tconst $children = [].slice.call(this.$container.children);\n\n\t\tfor (let i = 0, el; (el = $children[i]); i++) {\n\t\t\tif (i > list.length - 1) {\n\t\t\t\tel.parentNode.removeChild(el);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tel.setAttribute(\"class\", list[i].className);\n\t\t\tel.setAttribute(\"style\", list[i].style);\n\t\t}\n\n\t\t// unbind events\n\t\tthis._bindEvents(false);\n\t\tthis.off();\n\n\t\t// release resources\n\t\tfor (const x in this) {\n\t\t\tthis[x] = null;\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/flicking.js","// internal config values\nconst CONFIG = {\n\tpanel: {\n\t\t$list: null,\t    // panel list\n\t\tindex: 0,\t\t\t// dom index used among process\n\t\tno: 0,\t\t\t\t// panel no used among process\n\t\tcurrIndex: 0,       // current physical dom index\n\t\tcurrNo: 0,          // current logical panel number\n\t\tsize: 0,\t\t\t// panel size\n\t\tcount: 0,\t\t\t// total physical panel count\n\t\torigCount: 0,\t\t// total count of given original panels\n\t\tchanged: false,\t\t// if panel changed\n\t\tanimating: false,\t// current animating status boolean\n\t\tminCount: 3         // minimum panel count\n\t},\n\ttouch: {\n\t\tholdPos: [0, 0],    // hold x,y coordinate\n\t\tdestPos: [0, 0],\t// destination x,y coordinate\n\t\tdistance: 0,\t\t// touch distance pixel of start to end touch\n\t\tdirection: null,\t// touch direction\n\t\tlastPos: 0,\t\t\t// to determine move on holding\n\t\tholding: false\n\t},\n\tcustomEvent: {          // for custom events value\n\t\tflick: true,\n\t\trestore: false,\n\t\trestoreCall: false\n\t},\n\tdirData: [],\t\t\t// direction constant value according horizontal or vertical\n\tindexToMove: 0,\n\t$dummyAnchor: null      // For buggy link highlighting on Android 2.x\n};\n\n\n// default options\nconst OPTIONS = {\n\thwAccelerable: true,    // ns.isHWAccelerable(),  // check weather hw acceleration is available\n\tprefix: \"eg-flick\",     // prefix value of class name\n\tdeceleration: 0.0006,   // deceleration value\n\thorizontal: true,       // move direction (true == horizontal, false == vertical)\n\tcircular: false,        // circular mode. In this mode at least 3 panels are required.\n\tpreviewPadding: null,   // preview padding value in left(up) to right(down) order. In this mode at least 5 panels are required.\n\tbounce: null,           // bounce value in left(up) to right(down) order. Works only in non-circular mode.\n\tthreshold: 40,          // the distance pixel threshold value for change panel\n\tduration: 100,          // duration ms for animation\n\tpanelEffect: x => 1 - Math.pow(1 - x, 3),  // easing function for panel change animation\n\tdefaultIndex: 0,        // initial panel index to be shown\n\tinputType: [            // input type\n\t\t\"touch\", \"mouse\"\n\t],\n\tthresholdAngle: 45,     // the threshold value that determines whether user action is horizontal or vertical (0~90)\n\tadaptiveHeight: false   // Set container's height be adaptive according panel's height\n};\n\nexport {\n\tCONFIG,\n\tOPTIONS\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","import * as consts from \"./consts\";\n\nexport default superclass => class extends superclass {\n\n\t/**\n\t * 'hold' event handler\n\t */\n\t_holdHandler(e) {\n\t\tconst conf = this._conf;\n\n\t\tconf.touch.holdPos = e.pos;\n\t\tconf.touch.holding = true;\n\t\tconf.panel.changed = false;\n\n\t\tthis._adjustContainerCss(\"start\", e.pos);\n\t}\n\n\t/**\n\t * 'change' event handler\n\t */\n\t_changeHandler(e) {\n\t\tconst conf = this._conf;\n\t\tconst touch = conf.touch;\n\t\tconst posIndex = +!this.options.horizontal;\n\t\tconst pos = e.pos[posIndex];\n\t\tconst holdPos = touch.holdPos[posIndex];\n\t\tlet direction;\n\t\tlet eventRes = null;\n\t\tlet movedPx;\n\n\t\tthis._setPointerEvents(e);  // for \"click\" bug\n\n\t\t/**\n\t\t * This event is fired when panel moves.\n\t\t * @ko 패널이 이동할 때 발생하는 이벤트\n\t\t * @name eg.Flicking#flick\n\t\t * @event\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {String} param.eventType The name of the event<ko>이름명</ko>\n\t\t * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n\t\t * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n\t\t * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n\t\t * @param {Array} param.pos Start coordinate <ko>출발점 좌표</ko>\n\t\t * @param {Number} param.pos.0 x-coordinate <ko>x 좌표</ko>\n\t\t * @param {Number} param.pos.1 y-coordinate <ko>y 좌표</ko>\n\t\t * @param {Boolean} param.holding Indicates whether a user holds an element on the screen of the device. <ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n\t\t * @param {Number} param.distance Distance moved from then starting point. According the move direction, positive on eg.MovableCoord.DIRECTION_LEFT/UP and negative on eg.MovableCoord.DIRECTION_RIGHT/DOWN <ko>시작점부터 이동된 거리의 값. 이동 방향에 따라 eg.MovableCoord.DIRECTION_LEFT/UP의 경우 양수를 eg.MovableCoord.DIRECTION_RIGHT/DOWN의 경우는 음수를 반환</ko>\n\t\t */\n\t\tif (e.hammerEvent) {\n\t\t\tdirection = e.hammerEvent.direction;\n\n\t\t\t// Adjust direction in case of diagonal touch move\n\t\t\tmovedPx = e.hammerEvent[this.options.horizontal ? \"deltaX\" : \"deltaY\"];\n\n\t\t\tif (!~conf.dirData.indexOf(direction)) {\n\t\t\t\tdirection = conf.dirData[+(Math.abs(touch.lastPos) <= movedPx)];\n\t\t\t}\n\n\t\t\ttouch.lastPos = movedPx;\n\t\t} else {\n\t\t\ttouch.lastPos = null;\n\t\t}\n\n\t\tconf.customEvent.flick && (eventRes =\n\t\t\tthis._triggerEvent(consts.EVENTS.flick, {\n\t\t\t\tpos: e.pos,\n\t\t\t\tholding: e.holding,\n\t\t\t\tdirection: direction || touch.direction,\n\t\t\t\tdistance: pos - (holdPos || (touch.holdPos[posIndex] = pos))\n\t\t\t}\n\t\t));\n\n\t\t(eventRes || eventRes === null) && this._setTranslate([-pos, 0]);\n\t}\n\n\t/**\n\t * 'release' event handler\n\t */\n\t_releaseHandler(e) {\n\t\tconst touch = this._conf.touch;\n\t\tconst pos = e.destPos;\n\t\tconst posIndex = +!this.options.horizontal;\n\t\tconst holdPos = touch.holdPos[posIndex];\n\t\tconst panelSize = this._conf.panel.size;\n\n\t\ttouch.distance = e.depaPos[posIndex] - touch.holdPos[posIndex];\n\n\t\ttouch.direction = this._conf.dirData[\n\t\t\t+!(touch.holdPos[posIndex] < e.depaPos[posIndex])\n\t\t];\n\n\t\tpos[posIndex] = Math.max(\n\t\t\tholdPos - panelSize, Math.min(holdPos, pos[posIndex])\n\t\t);\n\n\t\ttouch.destPos[posIndex] =\n\t\t\tpos[posIndex] = Math.round(pos[posIndex] / panelSize) * panelSize;\n\n\t\ttouch.distance === 0 && this._adjustContainerCss(\"end\");\n\t\ttouch.holding = false;\n\n\t\tthis._setPointerEvents();  // for \"click\" bug\n\t}\n\n\t/**\n\t * 'animationStart' event handler\n\t */\n\t_animationStartHandler(e) {\n\t\tconst conf = this._conf;\n\t\tconst panel = conf.panel;\n\t\tconst customEvent = conf.customEvent;\n\n\t\tpanel.animating = true;\n\n\t\tif (!customEvent.restoreCall && e.hammerEvent &&\n\t\t\tthis._setPhaseValue(\"start\", {\n\t\t\t\tdepaPos: e.depaPos,\n\t\t\t\tdestPos: e.destPos\n\t\t\t}) === false) {\n\t\t\te.stop();\n\t\t}\n\n\t\tif (e.hammerEvent) {\n\t\t\te.duration = this.options.duration;\n\n\t\t\te.destPos[+!this.options.horizontal] =\n\t\t\t\tpanel.size * (\n\t\t\t\t\tpanel.index + conf.indexToMove\n\t\t\t\t);\n\t\t}\n\n\t\tif (this._isMovable()) {\n\t\t\t!customEvent.restoreCall && (customEvent.restore = false);\n\t\t} else {\n\t\t\tthis._triggerBeforeRestore(e);\n\t\t}\n\t}\n\n\t/**\n\t * 'animationEnd' event handler\n\t */\n\t_animationEndHandler() {\n\t\tthis._setPhaseValue(\"end\");\n\n\t\tthis._conf.panel.animating = false;\n\t\tthis._triggerRestore();\n\t}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/eventHandler.js","import {window, document} from \"./browser\";\n\nconst utils = {\n\t/**\n\t * Select or create element\n\t * @param {String|HTMLElement} param\n\t *  when string given is as HTML tag, then create element\n\t *  otherwise it returns selected elements\n\t * @returns {HTMLElement}\n\t */\n\t$(param) {\n\t\tlet el = null;\n\n\t\tif (typeof param === \"string\") {\n\t\t\t// check if string is HTML tag format\n\t\t\tconst match = param.match(/^<([a-z]+)\\s*([^>]*)>/);\n\n\t\t\t// creating element\n\t\t\tif (match) {\n\t\t\t\tel = document.createElement(match[1]);\n\n\t\t\t\t// attributes\n\t\t\t\tmatch.length === 3 &&\n\t\t\t\t\tmatch[2].split(\" \").forEach(v => {\n\t\t\t\t\t\tconst attr = v.split(\"=\");\n\n\t\t\t\t\t\tel.setAttribute(attr[0], attr[1]);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tel = document.querySelectorAll(param);\n\t\t\t\tel = el.length === 1 ? el[0] : el;\n\t\t\t}\n\t\t} else if (param.nodeName && param.nodeType === 1) {\n\t\t\tel = param;\n\t\t}\n\n\t\treturn el;\n\t},\n\n\t/**\n\t * Check if is object\n\t * @param {Object} obj\n\t * @returns {Boolean}\n\t */\n\tisObject(obj) {\n\t\treturn obj && typeof obj === \"object\" && !Array.isArray(obj);\n\t},\n\n\t/**\n\t * Merge object\n\t * @param {Object} target\n\t * @param {Object} objectN\n\t * @returns {Object} merged target object\n\t * @example\n\t *  var target = { a: 1 };\n\t *  utils.extend(target, { b: 2, c: 3 });\n\t *  target;  // { a: 1, b: 2, c: 3 };\n\t */\n\textend(target, ...objectN) {\n\t\tif (!objectN.length) {\n\t\t\treturn target;\n\t\t}\n\n\t\tconst source = objectN.shift();\n\t\tlet output;\n\n\t\tif (this.isObject(target) && this.isObject(source)) {\n\t\t\toutput = Object.assign({}, target);\n\n\t\t\tObject.keys(source).forEach(key => {\n\t\t\t\tif (this.isObject(source[key])) {\n\t\t\t\t\t!output[key] && Object.assign(output, {[key]: {}});\n\t\t\t\t\toutput[key] = this.extend(target[key], source[key]);\n\t\t\t\t} else {\n\t\t\t\t\tObject.assign(output, {[key]: source[key]});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this.extend(output, ...objectN);\n\t},\n\n\t/**\n\t * Get the style value or apply\n\t * @param {HTMLElement} el\n\t * @param {String|Object} style\n\t *  String: return style property value\n\t *  Object: set style value\n\t * @parma {Boolean} getAsNumber - get the value as number\n\t * @returns {String|HTMLElement}\n\t */\n\tcss(el, style, getAsNumber) {\n\t\tif (typeof(style) === \"string\") {\n\t\t\tconst value = getComputedStyle(el)[style];\n\n\t\t\treturn getAsNumber ? this.getNumValue(value) : value;\n\t\t} else {\n\t\t\tArray.isArray(el) ?\n\t\t\t\tel.forEach(v => Object.assign(v.style, style)) :\n\t\t\t\tObject.assign(el.style, style);\n\t\t}\n\n\t\treturn el;\n\t},\n\n\t/**\n\t * Check and parse value to number\n\t * @param {Number|String} val\n\t * @param {Number} defVal\n\t * @return {Number}\n\t */\n\tgetNumValue(val, defVal) {\n\t\tlet num = val;\n\n\t\treturn isNaN(num = parseInt(num, 10)) ? defVal : num;\n\t},\n\n\t/**\n\t * Return unit formatted value\n\t * @param {Number|String} val\n\t * @return {String} val Value formatted with unit\n\t */\n\tgetUnitValue(val) {\n\t\tconst rx = /(?:[a-z]{2,}|%)$/;\n\n\t\treturn (parseInt(val, 10) || 0) + (String(val).match(rx) || \"px\");\n\t},\n\n\t/**\n\t * Get element's outer value\n\t * @param {HTMLElement} el\n\t * @param {String} type - [outerWidth|outerHeight]\n\t * @returns {Number} outer's value\n\t */\n\tgetOuter(el, type) {\n\t\tconst style = getComputedStyle(el);\n\t\tconst margin = type === \"outerWidth\" ?\n\t\t\t[\"marginLeft\", \"marginRight\"] : [\"marginTop\", \"marginBottom\"];\n\n\t\treturn this.getNumValue(style[type.replace(\"outer\", \"\").toLocaleLowerCase()]) +\n\t\t\tthis.getNumValue(style[margin[0]]) +\n\t\t\tthis.getNumValue(style[margin[1]]);\n\t},\n\n\t/**\n\t * Get element's outerWidth value with margin\n\t * @param {HTMLElement} el\n\t * @returns {Number}\n\t */\n\touterWidth(el) {\n\t\treturn this.getOuter(el, \"outerWidth\");\n\t},\n\n\t/**\n\t * Get element's outerHeight value with margin\n\t * @param {HTMLElement} el\n\t * @returns {Number}\n\t */\n\touterHeight(el) {\n\t\treturn this.getOuter(el, \"outerHeight\");\n\t},\n\n\t/**\n\t * Checks whether hardware acceleration is enabled.\n\t *\n\t * @ko 하드웨어 가속을 사용할 수 있는 환경인지 확인한다\n\t * @method eg#isHWAccelerable\n\t * @return {Boolean} Indicates whether hardware acceleration is enabled. <ko>하드웨어 가속 사용 가능 여부</ko>\n\t * @example\n\t eg.isHWAccelerable();  // Returns 'true' when hardware acceleration is supported\n\n\t // also, you can control return value\n\t eg.hook.isHWAccelerable = function(defalutVal,agent) {\nif(agent.os.name === \"ios\") {\n\t// if os is 'ios', return value is 'false'\n\treturn false;\n} else if(agent.browser.name === \"chrome\" ) {\n\t// if browser is 'chrome', return value is 'true'\n\treturn true;\n}\nreturn defaultVal;\n}\n\t */\n\tisHWAccelerable() {\n\t\tconst ua = window.navigator.userAgent;\n\t\tlet result = false;\n\t\tlet match;\n\n\t\t// chrome 25- has a text blur bug (except Samsung's sbrowser)\n\t\tif ((match = ua.match(/Chrome\\/(\\d+)/))) {\n\t\t\tresult = match[1] >= \"25\";\n\t\t} else if (/ie|edge|firefox|safari|inapp/.test(ua)) {\n\t\t\tresult = true;\n\t\t} else if ((match = ua.match(/Android ([\\d.]+)/))) {\n\t\t\tconst version = match[1];\n\t\t\tconst useragent = (ua.match(/\\(.*\\)/) || [null])[0];\n\n\t\t\t// android 4.1+ blacklist\n\t\t\t// EK-GN120 : Galaxy Camera, SM-G386F : Galaxy Core LTE\n\t\t\t// SHW-M420 : Galaxy Nexus , SHW-M200 : NexusS , GT-S7562 : Galaxy S duos\n\t\t\tresult = (version >= \"4.1.0\" && !/EK-GN120|SM-G386F/.test(useragent)) ||\n\t\t\t\t(\n\t\t\t\t\tversion >= \"4.0.3\" &&\n\t\t\t\t\t/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(useragent) &&\n\t\t\t\t\t!/SHW-M420|SHW-M200|GT-S7562/.test(useragent)\n\t\t\t\t);\n\t\t}\n\n\t\tthis.isHWAccelerable = () => result;\n\t\treturn result;\n\t},\n\n\t/**\n\t * Returns the syntax of the translate style which is applied to CSS transition properties.\n\t *\n\t * @ko CSS 트랜지션 속성에 적용할 translate 스타일 구문을 반환한다\n\t * @method eg#translate\n\t * @param {String} x Distance to move along the X axis <ko>x축을 따라 이동할 거리</ko>\n\t * @param {String} y Distance to move along the Y axis <ko>y축을 따라 이동할 거리</ko>\n\t * @param {Boolean} [isHA] Force hardware acceleration <ko>하드웨어 가속 사용 여부</ko>\n\t * @return {String} Syntax of the translate style <ko>translate 스타일 구문</ko>\n\t * @example\n\t eg.translate('10px', '200%');  // translate(10px,200%);\n\t eg.translate('10px', '200%', true);  // translate3d(10px,200%,0);\n\t */\n\ttranslate(x, y, isHA) {\n\t\treturn isHA || false ?\n\t\t\t`translate3d(${x},${y},0)` : `translate(${x},${y})`;\n\t},\n\n\t// 1. user press one position on screen.\n\t// 2. user moves to the other position on screen.\n\t// 3. when user releases fingers on screen, 'click' event is fired at previous position.\n\thasClickBug() {\n\t\tconst ua = window.navigator.userAgent;\n\t\tconst result = /Safari/.test(ua);\n\n\t\tthis.hasClickBug = () => result;\n\t\treturn result;\n\t}\n};\n\nclass MixinBuilder {\n\tconstructor(superclass) {\n\t\tthis.superclass = superclass || class {};\n\t}\n\n\twith(...mixins) {\n\t\treturn mixins.reduce((c, m) => m(c), this.superclass);\n\t}\n}\n\nconst Mixin = superclass => new MixinBuilder(superclass);\n\nexport {utils, Mixin};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"eg.component\",\"commonjs2\":\"eg.component\",\"amd\":\"eg.component\",\"root\":[\"eg\",\"Component\"]}\n// module id = 6\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"eg.movablecoord\",\"commonjs2\":\"eg.movablecoord\",\"amd\":\"eg.movablecoord\",\"root\":[\"eg\",\"MovableCoord\"]}\n// module id = 7\n// module chunks = 0 1","import Flicking from \"./flicking\";\n\nmodule.exports = Flicking;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}